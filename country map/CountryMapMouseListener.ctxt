#BlueJ class context
comment0.params=model
comment0.target=void\ setModel(CountryMapModel)
comment0.text=\n\ Assocates\ a\ data\ model\ for\ this\ listener.\ \n\ Other\ methods\ of\ this\ class\ rely\ on\ the\ existence\ of\ associated\ model.\ \n\ User\ is\ responsible\ for\ providing\ the\ valid\ data\ model\ before\ the\ listener\ \n\ instance\ can\ be\ used.\n\ \n\ @param\ model\ the\ data\ model\ to\ be\ associated.\n
comment1.params=e
comment1.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment1.text=\n\ Implements\ to\ process\ a\ mouse\ clicked\ event\ as\ defined\ in\ MouseListener.\ \n\ Implementation\ should\ check\ the\ current\ mode\ to\ determine\ and\ perform\ a\ suitable\ action,\ \n\ such\ as\ zooming\ in/out\ a\ photo\ in\ browse\ mode,\ adding\ a\ new\ photo\ in\ pin\ mode,\ or\ remove\ \n\ an\ existing\ photo\ in\ detele\ mode.\ See\ also\ CountryMapModel.MODE_BROWSE,\ CountryMapModel.MODE_PIN\ \n\ and\ CountryMapModel.MODE_DELETE.\n
comment10.params=image
comment10.target=double\ findRegularScale(comp102x.ColorImage)
comment10.text=\n\ Calculates\ a\ scale\ factor\ to\ fit\ the\ image\ in\ regular\ format.\n
comment11.params=imgWidth\ imgHeight\ targetWidth\ targetHeight
comment11.target=double\ findTargetScale(int,\ int,\ int,\ int)
comment11.text=\n\ Calculates\ a\ scale\ factor\ to\ fit\ the\ suggested\ target\ dimension.\ \n
comment12.params=x\ y\ image
comment12.target=boolean\ isInsideImage(int,\ int,\ comp102x.ColorImage)
comment12.text=\n\ Tests\ if\ a\ point\ lies\ inside\ the\ specified\ image.\ It\ also\ considers\ the\ current\ scale\ factor\ of\ the\ image.\n\ \n\ @return\ true\ if\ the\ point\ lies\ within\ the\ scaled\ bound\ of\ the\ input\ image.\n
comment2.params=e
comment2.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment3.params=e
comment3.target=void\ mouseExited(java.awt.event.MouseEvent)
comment4.params=e
comment4.target=void\ mousePressed(java.awt.event.MouseEvent)
comment5.params=e
comment5.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment6.params=e
comment6.target=void\ doBrowsePhoto(java.awt.event.MouseEvent)
comment6.text=\n\ Processes\ mouse\ clicks\ while\ the\ program\ is\ in\ browse\ mode.\ \n\ This\ method\ is\ called\ only\ after\ a\ mouse\ click\ is\ received\ while\ in\ browse\ mode.\ \n\ If\ a\ left\ mouse\ button\ click\ hits\ a\ photo,\ it\ enlarges\ the\ photo\ to\ a\ regular\ format.\ \n\ If\ a\ right\ mouse\ button\ click\ hits\ a\ photo,\ it\ shrinks\ the\ photo\ to\ a\ thumbnail\ format.\n\ \n\ Unknown\ issue\:\ there\ is\ no\ gurantee\ to\ determine\ the\ z-order\ of\ existing\ photos.\ \n\ Canvas\ provides\ no\ accessor\ to\ retrieve\ z-order\ information\ which\ might\ be\ altered\ by\ the\ user\ \n\ through\ its\ UI.\n\ \n\ Implementation\ is\ suggested\ to\ loop\ through\ all\ the\ photos\ and\ see\ if\ a\ hit\ is\ detected,\ and\ \n\ resize\ the\ target\ photo\ by\ setting\ an\ appropriate\ scale\ factor.\ Users\ may\ find\ the\ following\ \n\ methods\ useful.\ \n\ Methods\ from\ MouseEvent\ can\ gather\ information\ such\ as\ the\ coordinate\ of\ the\ event,\ \n\ the\ button\ which\ produces\ the\ event.\ Model.getPhotos()\ helps\ to\ get\ an\ array\ copy\ of\ the\ photos.\n\ Helper\ methods\ findRegularScale(ColorImage)\ and\ findThumbnailScale(ColorImage)\ calculate\n\ the\ scale\ factor\ values.\ isInsideImage(int,\ int,\ ColorImage)\ tests\ if\ a\ position\ lies\ inside\ \n\ an\ image.\n
comment7.params=e
comment7.target=void\ doPinNewPhoto(java.awt.event.MouseEvent)
comment7.text=\n\ Processes\ mouse\ clicks\ while\ the\ program\ is\ in\ pin\ mode.\ \n\ This\ method\ is\ called\ only\ after\ a\ mouse\ click\ is\ received\ while\ in\ pin\ mode.\ \n\ A\ new\ ColorImage\ will\ be\ loaded\ and\ pinned\ at\ the\ mouse\ location.\ \n\ The\ photo\ will\ be\ initially\ scaled\ to\ a\ thumbnail\ format.\n\ Before\ this\ method\ finishes,\ it\ updates\ the\ model\ back\ to\ browse\ mode.\n
comment8.params=e
comment8.target=void\ doRemovePhoto(java.awt.event.MouseEvent)
comment8.text=\n\ Processes\ mouse\ clicks\ while\ the\ program\ is\ in\ \ delete\ mode.\ \n\ This\ method\ is\ called\ only\ after\ a\ mouse\ click\ is\ received\ whlie\ in\ delete\ mode.\n\ If\ the\ moues\ click\ hits\ an\ existing\ photo,\ the\ target\ photo\ is\ removed\ from\ the\ \n\ model.\ This\ method\ ends\ by\ updaing\ the\ model\ to\ browse\ mode.\n
comment9.params=image
comment9.target=double\ findThumbnailScale(comp102x.ColorImage)
comment9.text=\n\ Calculates\ a\ scale\ factor\ to\ fit\ the\ image\ in\ thumbnail\ format.\n
numComments=13
